import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';
import { resolve } from 'path';

// Carregar vari√°veis de ambiente do arquivo .env
dotenv.config({ path: resolve(process.cwd(), '.env') });

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL || '';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || '';

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testarConexao() {
  console.log('üîç Testando conex√£o com Supabase...\n');
  
  try {
    // Testar conex√£o b√°sica
    console.log('üîå Testando conex√£o b√°sica...');
    const { data, error } = await supabase
      .from('products')
      .select('id')
      .limit(1);
    
    if (error && !error.message.includes('The resource was not found')) {
      console.error('‚ùå Erro de conex√£o:', error.message);
      process.exit(1);
    }
    
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    
    // Testar autentica√ß√£o
    console.log('\nüîê Testando autentica√ß√£o...');
    const { data: authData, error: authError } = await supabase.auth.getUser();
    
    if (authError && !authError.message.includes('Auth session missing')) {
      console.error('‚ùå Erro de autentica√ß√£o:', authError.message);
    } else if (authError) {
      console.log('‚ö†Ô∏è  Nenhuma sess√£o ativa (isso √© normal se n√£o estiver logado)');
    } else {
      console.log('‚úÖ Autentica√ß√£o funcionando');
      console.log('   Usu√°rio atual:', authData.user?.email);
    }
    
    // Listar tabelas dispon√≠veis
    console.log('\nüìã Listando tabelas dispon√≠veis...');
    // @ts-ignore - Ignorar tipo para acessar internal API
    const { data: tables, error: tablesError } = await supabase.rpc('get_tables');
    
    if (tablesError) {
      console.log('‚ö†Ô∏è  N√£o foi poss√≠vel listar tabelas (isso √© normal em alguns casos)');
    } else {
      console.log('   Tabelas encontradas:', tables);
    }
    
    console.log('\n‚úÖ Teste de conex√£o conclu√≠do com sucesso!');
    
  } catch (error: any) {
    console.error('‚ùå Erro durante o teste de conex√£o:', error.message);
    process.exit(1);
  }
}

// Executar teste
testarConexao();