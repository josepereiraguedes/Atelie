// Script para verificar a configura√ß√£o do Supabase via API

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente do .env
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Credenciais do Supabase n√£o encontradas no .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function verificarConfiguracao() {
  console.log('=== Verifica√ß√£o de Configura√ß√£o do Supabase ===\n');
  
  try {
    // Tentar obter informa√ß√µes b√°sicas do projeto
    console.log('üîç Verificando conex√£o com o Supabase...');
    
    // Verificar se conseguimos acessar o auth
    const { data, error } = await supabase.auth.getUser();
    
    if (error && !error.message.includes('Auth session missing')) {
      console.log('‚ùå Erro de autentica√ß√£o:', error.message);
      process.exit(1);
    }
    
    console.log('‚úÖ Conex√£o com o Supabase estabelecida com sucesso');
    console.log('üîó URL do projeto:', supabaseUrl);
    
    // Testar cria√ß√£o de usu√°rio (sem confirmar)
    console.log('\nüîç Testando cria√ß√£o de usu√°rio...');
    const testEmail = `test-${Date.now()}@example.com`;
    const testPassword = 'test123';
    
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword
    });
    
    if (signUpError) {
      console.log('‚ùå Erro ao criar usu√°rio de teste:', signUpError.message);
      // Continuar mesmo com erro, pois pode ser uma limita√ß√£o de configura√ß√£o
    } else {
      console.log('‚úÖ Usu√°rio de teste criado com sucesso');
      console.log('üë§ ID do usu√°rio:', signUpData.user?.id);
      console.log('üìß Email confirmado:', signUpData.user?.email_confirmed_at ? 'Sim' : 'N√£o');
      
      // Tentar fazer login imediatamente
      console.log('\nüîç Testando login imediato...');
      const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
        email: testEmail,
        password: testPassword
      });
      
      if (signInError) {
        console.log('‚ùå Erro ao fazer login:', signInError.message);
      } else {
        console.log('‚úÖ Login realizado com sucesso');
        console.log('üîë Sess√£o ativa:', !!signInData.session);
      }
    }
    
    console.log('\n=== Resumo ===');
    console.log('‚úÖ Configura√ß√£o b√°sica do Supabase est√° funcionando');
    console.log('‚ÑπÔ∏è  Lembre-se de desativar a confirma√ß√£o de email no painel do Supabase:');
    console.log('   1. Acesse https://app.supabase.com');
    console.log('   2. Selecione seu projeto');
    console.log('   3. V√° para Authentication > Settings');
    console.log('   4. Desative "Enable email confirmations"');
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error);
    process.exit(1);
  }
}

verificarConfiguracao();