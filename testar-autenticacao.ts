import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

// Configura√ß√£o do Supabase
const supabaseUrl = process.env.VITE_SUPABASE_URL || '';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || '';

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testarAutenticacao() {
  console.log('üîç Testando autentica√ß√£o com Supabase...\n');
  
  try {
    // Verificar se h√° sess√£o ativa
    console.log('üîê Verificando sess√£o atual...');
    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.error('‚ùå Erro ao verificar sess√£o:', sessionError.message);
    } else {
      if (sessionData.session) {
        console.log('‚úÖ Sess√£o ativa encontrada');
        console.log('   User ID:', sessionData.session.user.id);
        console.log('   Email:', sessionData.session.user.email);
      } else {
        console.log('‚ö†Ô∏è  Nenhuma sess√£o ativa encontrada');
      }
    }
    
    // Verificar usu√°rio atual
    console.log('\nüë§ Verificando usu√°rio atual...');
    const { data: userData, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.error('‚ùå Erro ao obter usu√°rio:', userError.message);
    } else {
      if (userData.user) {
        console.log('‚úÖ Usu√°rio logado');
        console.log('   User ID:', userData.user.id);
        console.log('   Email:', userData.user.email);
        console.log('   Confirmed At:', userData.user.confirmed_at || 'N/A');
        console.log('   Created At:', userData.user.created_at);
      } else {
        console.log('‚ö†Ô∏è  Nenhum usu√°rio logado');
      }
    }
    
    console.log('\nüìã Teste de autentica√ß√£o conclu√≠do!');
    
  } catch (error: any) {
    console.error('‚ùå Erro durante o teste de autentica√ß√£o:', error.message);
    process.exit(1);
  }
}

// Executar teste
testarAutenticacao();