// Script para verificar a configura√ß√£o do Supabase
import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';
import { resolve } from 'path';

// Carregar vari√°veis de ambiente do arquivo .env
config({ path: resolve(process.cwd(), '.env') });

async function checkSupabaseConfig() {
  console.log('üîç Verificando configura√ß√£o do Supabase...');
  console.log('');
  
  // Verificar se as vari√°veis de ambiente est√£o definidas
  const supabaseUrl = process.env.VITE_SUPABASE_URL;
  const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;
  
  if (!supabaseUrl || supabaseUrl === 'sua_url_do_supabase_aqui') {
    console.error('‚ùå VITE_SUPABASE_URL n√£o est√° configurada corretamente no arquivo .env');
    console.log('');
    console.log('üí° Como corrigir:');
    console.log('   1. Abra o arquivo .env na raiz do projeto');
    console.log('   2. Substitua "sua_url_do_supabase_aqui" pela URL real do seu projeto Supabase');
    console.log('   3. Siga o guia em CONFIGURE_SUPABASE.md para obter as credenciais');
    console.log('');
    process.exit(1);
  }
  
  if (!supabaseAnonKey || supabaseAnonKey === 'sua_chave_anonima_do_supabase_aqui') {
    console.error('‚ùå VITE_SUPABASE_ANON_KEY n√£o est√° configurada corretamente no arquivo .env');
    console.log('');
    console.log('üí° Como corrigir:');
    console.log('   1. Abra o arquivo .env na raiz do projeto');
    console.log('   2. Substitua "sua_chave_anonima_do_supabase_aqui" pela chave real do seu projeto Supabase');
    console.log('   3. Siga o guia em CONFIGURE_SUPABASE.md para obter as credenciais');
    console.log('');
    process.exit(1);
  }
  
  console.log('‚úÖ Vari√°veis de ambiente configuradas');
  console.log(`   URL: ${supabaseUrl.substring(0, 30)}...`);
  
  try {
    // Validar formato da URL
    try {
      new URL(supabaseUrl);
    } catch (urlError) {
      console.error('‚ùå VITE_SUPABASE_URL n√£o √© uma URL v√°lida');
      console.log('');
      console.log('üí° Como corrigir:');
      console.log('   Verifique se a URL est√° no formato correto: https://seu-projeto.supabase.co');
      console.log('');
      process.exit(1);
    }
    
    // Criar cliente do Supabase para teste
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    
    // Tentar conectar ao Supabase
    console.log('üîå Testando conex√£o com Supabase...');
    
    // Testar uma opera√ß√£o simples
    const { data, error } = await supabase
      .from('products')
      .select('id')
      .limit(1);
    
    if (error) {
      if (error.message.includes('Invalid API key')) {
        console.error('‚ùå Chave de API inv√°lida (VITE_SUPABASE_ANON_KEY)');
        console.log('');
        console.log('üí° Como corrigir:');
        console.log('   1. Verifique se copiou a chave "anon key" correta do painel do Supabase');
        console.log('   2. Certifique-se de que n√£o h√° espa√ßos extras na chave');
        console.log('');
        process.exit(1);
      } else if (error.message.includes('Could not connect to Supabase') || error.message.includes('fetch failed')) {
        console.error('‚ùå N√£o foi poss√≠vel conectar ao Supabase');
        console.log('');
        console.log('üí° Como corrigir:');
        console.log('   1. Verifique se a VITE_SUPABASE_URL est√° correta');
        console.log('   2. Confirme sua conex√£o com a internet');
        console.log('   3. Verifique se o projeto Supabase est√° ativo');
        console.log('');
        process.exit(1);
      } else if (error.message.includes('The resource was not found')) {
        console.warn('‚ö†Ô∏è  Tabelas n√£o encontradas. Isso pode ser esperado se o schema ainda n√£o foi criado.');
        console.log('‚úÖ Conex√£o com Supabase estabelecida com sucesso');
        console.log('');
        console.log('üí° Pr√≥ximos passos:');
        console.log('   1. Acesse o painel do Supabase (https://supabase.com/dashboard)');
        console.log('   2. V√° para "Table Editor" > "SQL Editor"');
        console.log('   3. Cole o conte√∫do do arquivo supabase-schema.sql');
        console.log('   4. Clique em "Run" para executar o script');
        console.log('   5. Consulte MANUAL_DATABASE_SETUP.md para instru√ß√µes detalhadas');
        console.log('');
        process.exit(0);
      } else {
        console.error(`‚ùå Erro ao conectar ao Supabase: ${error.message}`);
        console.log('');
        console.log('üí° Tente seguir o guia em CONFIGURE_SUPABASE.md para verificar sua configura√ß√£o');
        console.log('');
        process.exit(1);
      }
    }
    
    console.log('‚úÖ Conex√£o com Supabase estabelecida com sucesso');
    console.log('');
    console.log('üéâ Configura√ß√£o do Supabase verificada com sucesso!');
    console.log('');
    console.log('üí° Agora voc√™ pode:');
    console.log('   - Iniciar o servidor de desenvolvimento com "yarn dev"');
    console.log('   - Testar o cadastro e login na aplica√ß√£o');
    console.log('');
    
  } catch (error: any) {
    console.error(`‚ùå Erro ao conectar ao Supabase: ${error.message}`);
    console.log('');
    console.log('üí° Tente seguir o guia em CONFIGURE_SUPABASE.md para verificar sua configura√ß√£o');
    console.log('');
    process.exit(1);
  }
}

// Executar a verifica√ß√£o
checkSupabaseConfig();